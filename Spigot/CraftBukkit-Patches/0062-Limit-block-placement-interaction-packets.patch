From 73fc3615617ef43483ed2375558fc86573385538 Mon Sep 17 00:00:00 2001
From: Thinkofdeath <thinkofdeath@spigotmc.org>
Date: Sun, 29 Jun 2014 21:10:34 +0100
Subject: [PATCH] Limit block placement/interaction packets


diff --git a/src/main/java/net/minecraft/network/protocol/game/PacketPlayInBlockPlace.java b/src/main/java/net/minecraft/network/protocol/game/PacketPlayInBlockPlace.java
index 74612f5f7..afec33eef 100644
--- a/src/main/java/net/minecraft/network/protocol/game/PacketPlayInBlockPlace.java
+++ b/src/main/java/net/minecraft/network/protocol/game/PacketPlayInBlockPlace.java
@@ -9,6 +9,7 @@ public class PacketPlayInBlockPlace implements Packet<PacketListenerPlayIn> {
 
     private final EnumHand hand;
     private final int sequence;
+    public long timestamp; // Spigot
 
     public PacketPlayInBlockPlace(EnumHand enumhand, int i) {
         this.hand = enumhand;
@@ -16,6 +17,7 @@ public class PacketPlayInBlockPlace implements Packet<PacketListenerPlayIn> {
     }
 
     public PacketPlayInBlockPlace(PacketDataSerializer packetdataserializer) {
+        this.timestamp = System.currentTimeMillis(); // Spigot
         this.hand = (EnumHand) packetdataserializer.readEnum(EnumHand.class);
         this.sequence = packetdataserializer.readVarInt();
     }
diff --git a/src/main/java/net/minecraft/network/protocol/game/PacketPlayInUseItem.java b/src/main/java/net/minecraft/network/protocol/game/PacketPlayInUseItem.java
index 675909dc6..44ed8f10d 100644
--- a/src/main/java/net/minecraft/network/protocol/game/PacketPlayInUseItem.java
+++ b/src/main/java/net/minecraft/network/protocol/game/PacketPlayInUseItem.java
@@ -11,6 +11,7 @@ public class PacketPlayInUseItem implements Packet<PacketListenerPlayIn> {
     private final MovingObjectPositionBlock blockHit;
     private final EnumHand hand;
     private final int sequence;
+    public long timestamp; // Spigot
 
     public PacketPlayInUseItem(EnumHand enumhand, MovingObjectPositionBlock movingobjectpositionblock, int i) {
         this.hand = enumhand;
@@ -19,6 +20,7 @@ public class PacketPlayInUseItem implements Packet<PacketListenerPlayIn> {
     }
 
     public PacketPlayInUseItem(PacketDataSerializer packetdataserializer) {
+        this.timestamp = System.currentTimeMillis(); // Spigot
         this.hand = (EnumHand) packetdataserializer.readEnum(EnumHand.class);
         this.blockHit = packetdataserializer.readBlockHitResult();
         this.sequence = packetdataserializer.readVarInt();
diff --git a/src/main/java/net/minecraft/server/network/PlayerConnection.java b/src/main/java/net/minecraft/server/network/PlayerConnection.java
index 16f010ed4..4b35bf550 100644
--- a/src/main/java/net/minecraft/server/network/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/network/PlayerConnection.java
@@ -1601,10 +1601,30 @@ public class PlayerConnection implements ServerPlayerConnection, TickablePacketL
         }
     }
 
+    // Spigot start - limit place/interactions
+    private int limitedPackets;
+    private long lastLimitedPacket = -1;
+
+    private boolean checkLimit(long timestamp) {
+        if (lastLimitedPacket != -1 && timestamp - lastLimitedPacket < 30 && limitedPackets++ >= 4) {
+            return false;
+        }
+
+        if (lastLimitedPacket == -1 || timestamp - lastLimitedPacket >= 30) {
+            lastLimitedPacket = timestamp;
+            limitedPackets = 0;
+            return true;
+        }
+
+        return true;
+    }
+    // Spigot end
+
     @Override
     public void handleUseItemOn(PacketPlayInUseItem packetplayinuseitem) {
         PlayerConnectionUtils.ensureRunningOnSameThread(packetplayinuseitem, this, this.player.getLevel());
         if (this.player.isImmobile()) return; // CraftBukkit
+        if (!checkLimit(packetplayinuseitem.timestamp)) return; // Spigot - check limit
         this.player.connection.ackBlockChangesUpTo(packetplayinuseitem.getSequence());
         WorldServer worldserver = this.player.getLevel();
         EnumHand enumhand = packetplayinuseitem.getHand();
@@ -1655,6 +1675,7 @@ public class PlayerConnection implements ServerPlayerConnection, TickablePacketL
     public void handleUseItem(PacketPlayInBlockPlace packetplayinblockplace) {
         PlayerConnectionUtils.ensureRunningOnSameThread(packetplayinblockplace, this, this.player.getLevel());
         if (this.player.isImmobile()) return; // CraftBukkit
+        if (!checkLimit(packetplayinblockplace.timestamp)) return; // Spigot - check limit
         this.ackBlockChangesUpTo(packetplayinblockplace.getSequence());
         WorldServer worldserver = this.player.getLevel();
         EnumHand enumhand = packetplayinblockplace.getHand();
-- 
2.34.1

